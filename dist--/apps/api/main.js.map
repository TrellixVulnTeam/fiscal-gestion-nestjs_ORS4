{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA,uDAAwC;AAExC,iDAA+C;AAC/C,wFAAoD;AACpD,0FAAgD;AAChD,wGAAoE;AACpE,sGAA4D;AAC5D,yDAAgD;AAChD,gIAAqF;AACrF,oGAA0D;AAC1D,wGAA8D;AAC9D,oFAAgD;AAChD,uDAA8C;AAC9C,2DAAkD;AAElD,+GAAqE;AAErE,oHAA+E;AAoC/E,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAG;AAAZ,SAAS;IAlCrB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,YAAY,CAAC;gBACzB,IAAI,EAAE,MAAM;gBACZ,UAAU,EAAE,GAAS,EAAE;oBACrB,aAAM,CAAC,MAAM,CAAC,MAAM,kCAAoB,EAAC,MAAM,CAAC,EAAE;wBAChD,QAAQ,EAAE,CAAC,gBAAG,CAAC;qBAChB,CAAC;kBAAA;aACL,CAAC;YACF,uBAAa,CAAC,YAAY,CAAC;gBACzB,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,GAAS,EAAE;oBACrB,aAAM,CAAC,MAAM,CAAC,MAAM,kCAAoB,EAAC,SAAS,CAAC,EAAE;wBACnD,QAAQ,EAAE,CAAC,wBAAO,EAAE,iDAAmB,EAAE,sBAAM,EAAE,0BAAQ,CAAC;qBAC3D,CAAC;kBAAA;aACL,CAAC;YACF,uBAAa,CAAC,YAAY,CAAC;gBACzB,IAAI,EAAE,YAAY;gBAClB,UAAU,EAAE,GAAS,EAAE;oBACrB,aAAM,CAAC,MAAM,CAAC,MAAM,kCAAoB,EAAC,WAAW,CAAC,EAAE;wBACrD,QAAQ,EAAE,CAAC,8BAAU,CAAC;qBACvB,CAAC;kBAAA;aACL,CAAC;YACF,qBAAY,CAAC,OAAO,EAAE;YACtB,yBAAc,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE;gBAC5C,eAAe,EAAE,IAAI;gBACrB,kBAAkB,EAAE,IAAI;aACzB,CAAC;YACF,wBAAU;YACV,gCAAc;YACd,wBAAU;YACV,qCAAgB;SACjB;KACF,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;;;;;;;ACrDtB,uDAA4C;AAC5C,sFAA6C;AAG7C,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAErD,CAAC;CACF;AAJY,cAAc;IAD1B,uBAAU,GAAE;sEAE+B,0BAAW,oBAAX,0BAAW;GAD1C,cAAc,CAI1B;AAJY,wCAAc;;;;;;;;;;;;ACJ3B,uDAAwC;AACxC,sFAA6C;AAC7C,4FAAmD;AAMnD,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IAJtB,mBAAM,EAAC;QACN,WAAW,EAAE,CAAC,gCAAc,CAAC;QAC7B,SAAS,EAAE,CAAC,0BAAW,CAAC;KACzB,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;;;;;ACRvB,uDAA4C;AAG5C,IAAa,WAAW,GAAxB,MAAa,WAAW;CAAG;AAAd,WAAW;IADvB,uBAAU,GAAE;GACA,WAAW,CAAG;AAAd,kCAAW;;;;;;;;;;;;;ACHxB,uDAAoE;AACpE,sHAA0D;AAI1D,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAC/B,YAA6B,YAA+B;QAA/B,iBAAY,GAAZ,YAAY,CAAmB;IAAG,CAAC;IAGhE,OAAO;QACL,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;CACF;AAHC;IADC,iBAAI,EAAC,SAAS,CAAC;;;;mDAGf;AANU,oBAAoB;IADhC,uBAAU,EAAC,wBAAwB,CAAC;sEAEQ,uCAAiB,oBAAjB,uCAAiB;GADjD,oBAAoB,CAOhC;AAPY,oDAAoB;;;;;;;;;;;;ACLjC,uDAAwC;AACxC,sHAA0D;AAC1D,4HAAgE;AAChE,yDAAgD;AAChD,+GAA2D;AAQ3D,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAN5B,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,uBAAa,CAAC,UAAU,CAAC,CAAC,8BAAU,CAAC,EAAE,YAAY,CAAC,CAAC;QAC/D,WAAW,EAAE,CAAC,6CAAoB,CAAC;QACnC,SAAS,EAAE,CAAC,uCAAiB,CAAC;QAC9B,OAAO,EAAE,CAAC,uBAAa,CAAC;KACzB,CAAC;GACW,gBAAgB,CAAG;AAAnB,4CAAgB;;;;;;;;;;;;;ACZ7B,uDAA4C;AAC5C,yDAAmD;AACnD,iDAAyC;AACzC,+GAA2D;AAI3D,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAC5B,YAEmB,UAAkC;QAAlC,eAAU,GAAV,UAAU,CAAwB;IAClD,CAAC;IAEJ,OAAO;QACL,OAAO,IAAI,CAAC,UAAU;aACnB,kBAAkB,CAAC,EAAE,CAAC;aACtB,MAAM,CAAC,GAAG,CAAC;aACZ,UAAU,EAAE,CAAC;IACjB,CAAC;CAGF;AAdY,iBAAiB;IAD7B,uBAAU,GAAE;IAGR,sDAAgB,EAAC,8BAAU,EAAE,aAAa,CAAC;sEACf,oBAAU,oBAAV,oBAAU;GAH9B,iBAAiB,CAc7B;AAdY,8CAAiB;;;;;;;;;;;;ACP9B,iDAAwD;AAGxD,IAAa,UAAU,GAAvB,MAAa,UAAU;CAetB;AAbC;IADC,2BAAa,GAAE;;gDACK;AAErB;IADC,oBAAM,GAAE;;uCACG;AAEZ;IADC,oBAAM,GAAE;;0CACM;AAEf;IADC,oBAAM,GAAE;;mDACe;AAExB;IADC,oBAAM,GAAE;;mDACe;AAExB;IADC,oBAAM,GAAE;;wCACI;AAEb;IADC,oBAAM,GAAE;;gDACY;AAdV,UAAU;IADtB,oBAAM,GAAE;GACI,UAAU,CAetB;AAfY,gCAAU;;;;;;;;;;;;ACHvB,iDAAwD;AAGxD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;CAM/B;AAJC;IADC,2BAAa,GAAE;;iEACa;AAG7B;IADC,oBAAM,GAAE;;wDACW;AALT,mBAAmB;IAD/B,oBAAM,EAAC,yBAAyB,CAAC;GACrB,mBAAmB,CAM/B;AANY,kDAAmB;;;;;;;;;;;;ACHhC,iDAAwD;AAGxD,IAAa,QAAQ,GAArB,MAAa,QAAQ;CASpB;AAPC;IADC,2BAAa,GAAE;;oCACL;AAGX;IADC,oBAAM,GAAE;;0CACQ;AAGjB;IADC,oBAAM,GAAE;;yCACO;AARL,QAAQ;IADpB,oBAAM,EAAC,WAAW,CAAC;GACP,QAAQ,CASpB;AATY,4BAAQ;;;;;;;;;;;;ACHrB,iDAAwD;AAGxD,IAAa,MAAM,GAAnB,MAAa,MAAM;CAMlB;AAJC;IADC,2BAAa,GAAE;;sCACD;AAGf;IADC,oBAAM,GAAE;;2CACW;AALT,MAAM;IADlB,oBAAM,EAAC,SAAS,CAAC;GACL,MAAM,CAMlB;AANY,wBAAM;;;;;;;;;;;;;ACHnB,iDAOiB;AACjB,gIAAoE;AACpE,oGAAyC;AACzC,wGAA6C;AAG7C,IAAa,OAAO,GAApB,MAAa,OAAO;IAGlB,QAAQ;QACN,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IAChD,CAAC;CAwFF;AA1FC;IADC,uBAAS,GAAE;;;;uCAGX;AAID;IADC,2BAAa,GAAE;;mCACL;AAIX;IAFC,sBAAQ,EAAC,GAAG,EAAE,CAAC,0BAAQ,CAAC;IACxB,wBAAU,EAAC,EAAE,IAAI,EAAE,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;+DAC7C,0BAAQ,oBAAR,0BAAQ;yCAAC;AAGnB;IADC,oBAAM,GAAE;;uCACM;AAGf;IADC,oBAAM,GAAE;;wCACO;AAGhB;IADC,oBAAM,GAAE;;wCACO;AAGhB;IADC,oBAAM,GAAE;;qCACI;AAGb;IADC,oBAAM,GAAE;+DACS,IAAI,oBAAJ,IAAI;iDAAC;AAGvB;IADC,oBAAM,GAAE;;sCACK;AAGd;IADC,oBAAM,GAAE;;6CACY;AAGrB;IADC,oBAAM,GAAE;;wCACO;AAOhB;IALC,sBAAQ,EAAC,GAAG,EAAE,CAAC,iDAAmB,CAAC;IACnC,wBAAU,EAAC;QACV,IAAI,EAAE,sBAAsB;QAC5B,oBAAoB,EAAE,sBAAsB;KAC7C,CAAC;+DACS,iDAAmB,oBAAnB,iDAAmB;0CAAC;AAI/B;IAFC,sBAAQ,EAAC,GAAG,EAAE,CAAC,sBAAM,CAAC;IACtB,wBAAU,EAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,oBAAoB,EAAE,QAAQ,EAAE,CAAC;+DACvD,sBAAM,oBAAN,sBAAM;uCAAC;AAGf;IADC,oBAAM,GAAE;;8CACa;AAStB;IADC,oBAAM,GAAE;;2CACU;AAGnB;IADC,oBAAM,GAAE;;6CACY;AAGrB;IADC,oBAAM,GAAE;+DACO,IAAI,oBAAJ,IAAI;+CAAC;AAGrB;IADC,oBAAM,GAAE;+DACW,IAAI,oBAAJ,IAAI;mDAAC;AArEd,OAAO;IADnB,oBAAM,EAAC,UAAU,CAAC;GACN,OAAO,CA6FnB;AA7FY,0BAAO;;;;;;;;;;;;;ACbpB,uDAMwB;AACxB,0GAAqD;AAGrD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAC7B,YAA6B,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;IAAG,CAAC;IAGjE,OAAO;QACL,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;IAC9C,CAAC;IAGK,OAAO,CAAe,GAAW;;YACrC,MAAM,CAAC,OAAO,CAAC,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;YACxE,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAM,IAAI,sBAAa,CAAC,uBAAuB,EAAE,mBAAU,CAAC,SAAS,CAAC,CAAC;aACxE;YACD,OAAO,OAAO,CAAC;QACjB,CAAC;KAAA;CACF;AAZC;IADC,gBAAG,GAAE;;;;iDAGL;AAGD;IADC,gBAAG,EAAC,MAAM,CAAC;IACG,0CAAK,EAAC,KAAK,CAAC;;;;iDAM1B;AAfU,kBAAkB;IAD9B,uBAAU,EAAC,kBAAkB,CAAC;sEAEiB,kCAAe,oBAAf,kCAAe;GADlD,kBAAkB,CAgB9B;AAhBY,gDAAkB;;;;;;;;;;;;ACV/B,uDAAwC;AACxC,0GAAqD;AACrD,gHAA2D;AAC3D,yDAAgD;AAChD,sGAAqD;AACrD,gIAA8E;AAC9E,oGAAmD;AACnD,wGAAuD;AAcvD,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAX1B,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,uBAAa,CAAC,UAAU,CACtB,CAAC,wBAAO,EAAE,iDAAmB,EAAE,sBAAM,EAAE,0BAAQ,CAAC,EAChD,SAAS,CACV;SACF;QACD,WAAW,EAAE,CAAC,wCAAkB,CAAC;QACjC,SAAS,EAAE,CAAC,kCAAe,CAAC;QAC5B,OAAO,EAAE,CAAC,uBAAa,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAjB,wCAAc;;;;;;;;;;;;;ACrB3B,uDAA4C;AAC5C,yDAAmD;AACnD,sGAAqD;AACrD,iDAAqC;AAGrC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,YAEmB,iBAAsC;QAAtC,sBAAiB,GAAjB,iBAAiB,CAAqB;IACtD,CAAC;IAEJ,aAAa;QACX,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACjC,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE;YACnC,SAAS,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,UAAU,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,GAAW;QACjB,MAAM,SAAS,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,SAAS,CACvD,CAAC,EACD,EAAE,CACH,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;QAC7B,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACjC,KAAK,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE;YACpD,SAAS,EAAE,CAAC,WAAW,EAAE,QAAQ,EAAE,UAAU,CAAC;SAC/C,CAAC,CAAC;IACL,CAAC;CACF;AAvBY,eAAe;IAD3B,uBAAU,GAAE;IAGR,sDAAgB,EAAC,wBAAO,EAAE,SAAS,CAAC;sEACD,oBAAU,oBAAV,oBAAU;GAHrC,eAAe,CAuB3B;AAvBY,0CAAe;;;;;;;;;;;;ACN5B,iDAAwD;AAGxD,IAAa,GAAG,GAAhB,MAAa,GAAG;CAOf;AALC;IADC,2BAAa,GAAE;;gCACJ;AAEZ;IADC,oBAAM,GAAE;;gDACmB;AAE5B;IADC,oBAAM,GAAE;;0CACa;AANX,GAAG;IADf,oBAAM,GAAE;GACI,GAAG,CAOf;AAPY,kBAAG;;;;;;;;;;;;;ACHhB,uDAAoE;AACpE,0FAA6C;AAG7C,IAAa,cAAc,GAA3B,MAAa,cAAc;IACzB,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAGzD,OAAO,CAAe,IAAc;QAClC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAGD,OAAO,CAAe,GAAW;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;CACF;AARC;IADC,iBAAI,EAAC,SAAS,CAAC;IACP,yCAAI,EAAC,MAAM,CAAC;;;;6CAEpB;AAGD;IADC,gBAAG,EAAC,MAAM,CAAC;IACH,0CAAK,EAAC,KAAK,CAAC;;;;6CAEpB;AAXU,cAAc;IAD1B,uBAAU,EAAC,UAAU,CAAC;sEAEqB,0BAAW,oBAAX,0BAAW;GAD1C,cAAc,CAY1B;AAZY,wCAAc;;;;;;;;;;;;ACJ3B,uDAAwC;AACxC,0FAA6C;AAC7C,gGAAmD;AACnD,yDAAgD;AAChD,0FAA6C;AAQ7C,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAG;AAAb,UAAU;IANtB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,uBAAa,CAAC,UAAU,CAAC,CAAC,gBAAG,CAAC,EAAE,MAAM,CAAC,CAAC;QAClD,WAAW,EAAE,CAAC,gCAAc,CAAC;QAC7B,SAAS,EAAE,CAAC,0BAAW,CAAC;QACxB,OAAO,EAAE,CAAC,uBAAa,CAAC;KACzB,CAAC;GACW,UAAU,CAAG;AAAb,gCAAU;;;;;;;;;;;;;ACZvB,uDAA4C;AAC5C,yDAAmD;AACnD,iDAAyC;AACzC,0FAA6C;AAI7C,IAAa,WAAW,GAAxB,MAAa,WAAW;IACtB,YAEmB,GAAoB;QAApB,QAAG,GAAH,GAAG,CAAiB;IACpC,CAAC;IAEJ,OAAO,CAAC,IAAc;QACpB,OAAO,IAAI,CAAC,GAAG;aACZ,kBAAkB,CAAC,GAAG,CAAC;aACvB,MAAM,CAAC,wBAAwB,CAAC;aAChC,KAAK,CAAC,oBAAoB,EAAE,EAAE,IAAI,EAAE,CAAC;aACrC,UAAU,EAAE,CAAC;IAClB,CAAC;IAEK,OAAO,CAAC,GAAW;;YACvB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,oBAAoB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAClE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtC,CAAC;KAAA;CAGF;AApBY,WAAW;IADvB,uBAAU,GAAE;IAGR,sDAAgB,EAAC,gBAAG,EAAE,MAAM,CAAC;sEACR,oBAAU,oBAAV,oBAAU;GAHvB,WAAW,CAoBvB;AApBY,kCAAW;;;;;;;;ACPxB;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;ACtBA;;;GAGG;;;AAEH,uDAAwC;AACxC,mDAA2C;AAE3C,6EAA6C;AAE7C,SAAe,SAAS;;QACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,CAAC,CAAC;QAChD,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACnB,MAAM,YAAY,GAAG,KAAK,CAAC;QAC3B,GAAG,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAClC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QACtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,eAAM,CAAC,GAAG,CACR,kDAAkD,IAAI,IAAI,YAAY,EAAE,CACzE,CAAC;IACJ,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","sources":["webpack://nominas-sat/./apps/api/src/app/app.module.ts","webpack://nominas-sat/./apps/api/src/app/auth/auth.controller.ts","webpack://nominas-sat/./apps/api/src/app/auth/auth.module.ts","webpack://nominas-sat/./apps/api/src/app/auth/auth.service.ts","webpack://nominas-sat/./apps/api/src/app/constancia/constancias/constancias.controller.ts","webpack://nominas-sat/./apps/api/src/app/constancia/constancias/constancias.module.ts","webpack://nominas-sat/./apps/api/src/app/constancia/constancias/constancias.service.ts","webpack://nominas-sat/./apps/api/src/app/constancia/entities/constancia.entity.ts","webpack://nominas-sat/./apps/api/src/app/eslabon/entities/delegacion-municipio.entity.ts","webpack://nominas-sat/./apps/api/src/app/eslabon/entities/empleado.entity.ts","webpack://nominas-sat/./apps/api/src/app/eslabon/entities/estado.entity.ts","webpack://nominas-sat/./apps/api/src/app/eslabon/entities/recurso.entity.ts","webpack://nominas-sat/./apps/api/src/app/eslabon/recursos/recursos.controller.ts","webpack://nominas-sat/./apps/api/src/app/eslabon/recursos/recursos.module.ts","webpack://nominas-sat/./apps/api/src/app/eslabon/recursos/recursos.service.ts","webpack://nominas-sat/./apps/api/src/app/sat/entities/rfc.entity.ts","webpack://nominas-sat/./apps/api/src/app/sat/rfcs/rfcs.controller.ts","webpack://nominas-sat/./apps/api/src/app/sat/rfcs/rfcs.module.ts","webpack://nominas-sat/./apps/api/src/app/sat/rfcs/rfcs.service.ts","webpack://nominas-sat/external commonjs \"@nestjs/common\"","webpack://nominas-sat/external commonjs \"@nestjs/config\"","webpack://nominas-sat/external commonjs \"@nestjs/core\"","webpack://nominas-sat/external commonjs \"@nestjs/mongoose\"","webpack://nominas-sat/external commonjs \"@nestjs/typeorm\"","webpack://nominas-sat/external commonjs \"tslib\"","webpack://nominas-sat/external commonjs \"typeorm\"","webpack://nominas-sat/webpack/bootstrap","webpack://nominas-sat/./apps/api/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\n\nimport { getConnectionOptions } from 'typeorm';\nimport { RfcsModule } from './sat/rfcs/rfcs.module';\nimport { Rfc } from './sat/entities/rfc.entity';\nimport { RecursosModule } from './eslabon/recursos/recursos.module';\nimport { Recurso } from './eslabon/entities/recurso.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { DelegacionMunicipio } from './eslabon/entities/delegacion-municipio.entity';\nimport { Estado } from './eslabon/entities/estado.entity';\nimport { Empleado } from './eslabon/entities/empleado.entity';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CargaLayout } from './cargasLayout/entities/carga.entity';\nimport { Constancia } from './constancia/entities/constancia.entity';\nimport { CargasModule } from './cargasLayout/cargas/cargas.module';\nimport { ConstanciaModule } from './constancia/constancias/constancias.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      name: 'rfcs',\n      useFactory: async () =>\n        Object.assign(await getConnectionOptions('rfcs'), {\n          entities: [Rfc],\n        }),\n    }),\n    TypeOrmModule.forRootAsync({\n      name: 'eslabon',\n      useFactory: async () =>\n        Object.assign(await getConnectionOptions('eslabon'), {\n          entities: [Recurso, DelegacionMunicipio, Estado, Empleado],\n        }),\n    }),\n    TypeOrmModule.forRootAsync({\n      name: 'constancia',\n      useFactory: async () =>\n        Object.assign(await getConnectionOptions('contancia'), {\n          entities: [Constancia],\n        }),\n    }),\n    ConfigModule.forRoot(),\n    MongooseModule.forRoot(process.env.MONGO_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    }),\n    RfcsModule,\n    RecursosModule,\n    AuthModule,\n    ConstanciaModule\n  ],\n})\nexport class AppModule {}\n","import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Controller()\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {\n    \n  }\n}\n","import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService]\n})\nexport class AuthModule {}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AuthService {}\n","import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { ConstanciaService } from './constancias.service';\n\n\n@Controller('constancia/constancias')\nexport class ConstanciaController {\n  constructor(private readonly constService: ConstanciaService) {}\n\n  @Post('listado')\n  findAll() {\n    return this.constService.findAll();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ConstanciaService } from './constancias.service';\nimport { ConstanciaController } from './constancias.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Constancia } from '../entities/constancia.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Constancia], 'constancia')],\n  controllers: [ConstanciaController],\n  providers: [ConstanciaService],\n  exports: [TypeOrmModule],\n})\nexport class ConstanciaModule {}\n\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { In, Repository } from 'typeorm';\nimport { Constancia } from '../entities/constancia.entity';\n\n\n@Injectable()\nexport class ConstanciaService {\n  constructor(\n    @InjectRepository(Constancia, 'constancias')\n    private readonly Constancia: Repository<Constancia>\n  ) {}\n\n  findAll() {\n    return this.Constancia\n      .createQueryBuilder('')\n      .select('*')\n     .getRawMany();\n  }\n\n \n}\n","import { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Constancia {\n  @PrimaryColumn()\n  idConstancia: number;\n  @Column()\n  rfc: string;\n  @Column()\n  nombre: string;\n  @Column()\n  apellidoPaterno: string;\n  @Column()\n  apellidoMaterno: string;\n  @Column()\n  curp: string;\n  @Column()\n  codigoPostal: string;\n}\n","import { Column, Entity, PrimaryColumn } from 'typeorm';\n\n@Entity('delegaciones_municipios')\nexport class DelegacionMunicipio {\n  @PrimaryColumn()\n  delegacion_municipio: number;\n\n  @Column()\n  descripcion: string;\n}\n","import { Column, Entity, PrimaryColumn } from 'typeorm';\n\n@Entity('empleados')\nexport class Empleado {\n  @PrimaryColumn()\n  id: number;\n\n  @Column()\n  empleado: string;\n\n  @Column()\n  estatus: number;\n}\n","import { Column, Entity, PrimaryColumn } from 'typeorm';\n\n@Entity('estados')\nexport class Estado {\n  @PrimaryColumn()\n  estado: number;\n\n  @Column()\n  descripcion: string;\n}\n","import {\n  AfterLoad,\n  Column,\n  Entity,\n  JoinColumn,\n  OneToOne,\n  PrimaryColumn,\n} from 'typeorm';\nimport { DelegacionMunicipio } from './delegacion-municipio.entity';\nimport { Estado } from './estado.entity';\nimport { Empleado } from './empleado.entity';\n\n@Entity('recursos')\nexport class Recurso {\n\n  @AfterLoad()\n  cleanRfc() {\n    this.rfc = this.curp.replace(/-/g, '').trim();\n  }\n  rfc: string;\n\n  @PrimaryColumn()\n  id: number;\n\n  @OneToOne(() => Empleado)\n  @JoinColumn({ name: 'id', referencedColumnName: 'id' })\n  empleado: Empleado;\n\n  @Column()\n  nombre: string;\n\n  @Column()\n  paterno: string;\n\n  @Column()\n  materno: string;\n\n  @Column()\n  curp: string;\n\n  @Column()\n  fecha_nacimiento: Date;\n\n  @Column()\n  calle: string;\n\n  @Column()\n  numero_calle: string;\n\n  @Column()\n  colonia: string;\n\n  @OneToOne(() => DelegacionMunicipio)\n  @JoinColumn({\n    name: 'delegacion_municipio',\n    referencedColumnName: 'delegacion_municipio',\n  })\n  municipio: DelegacionMunicipio;\n\n  @OneToOne(() => Estado)\n  @JoinColumn({ name: 'estado', referencedColumnName: 'estado' })\n  estado: Estado;\n\n  @Column()\n  codigo_postal: string;\n\n  /*@Column()\n  telefono_propio: string;\n\n  @Column()\n  telefono_recado: string;*/\n\n  @Column()\n  originario: string;\n\n  @Column()\n  estado_civil: number;\n\n  @Column()\n  fecha_registro: Date;\n\n  @Column()\n  fecha_modificacion: Date;\n\n  /*trasladarse: { type: DataTypes.SMALLINT, allowNull: true },\n  sueldo_pretende: {\n    type: DataTypes.DECIMAL({ length: 18, decimals: 2 }),\n    allowNull: true,\n  },\n  sindicato_anterior: { type: DataTypes.STRING(60), allowNull: true },\n  depende_padres: { type: DataTypes.SMALLINT, allowNull: true },\n  tiene_cuenta_inversion: { type: DataTypes.SMALLINT, allowNull: true },\n  banco_inversion: { type: DataTypes.STRING(30), allowNull: true },\n  tiene_cuenta_ahorro: { type: DataTypes.SMALLINT, allowNull: true },\n  banco_ahorro: { type: DataTypes.STRING(30), allowNull: true },\n  tiene_seguro: { type: DataTypes.SMALLINT, allowNull: true },\n  compania_seguro: { type: DataTypes.CHAR(30), allowNull: true },\n  casa_propia: { type: DataTypes.SMALLINT, allowNull: true },\n  afiliacion_imss: { type: DataTypes.CHAR(14), allowNull: true },\n  afiliacion_issste: { type: DataTypes.CHAR(14), allowNull: true },\n  accidentes_enfermedades: { type: DataTypes.STRING(255), allowNull: true },\n  tipo_sangre: { type: DataTypes.CHAR(5), allowNull: true },\n  cuenta_individual: { type: DataTypes.STRING(30), allowNull: true },\n  tipo_licencia: { type: DataTypes.STRING(10), allowNull: true },\n  interior: { type: DataTypes.STRING(10), allowNull: true },\n  licencia: { type: DataTypes.STRING(10), allowNull: true },*/\n}\n","import {\n  Controller,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n} from '@nestjs/common';\nimport { RecursosService } from './recursos.service';\n\n@Controller('eslabon/recursos')\nexport class RecursosController {\n  constructor(private readonly recursosService: RecursosService) {}\n\n  @Get()\n  findAll() {\n    return this.recursosService.findAllActive();\n  }\n\n  @Get(':rfc')\n  async findOne(@Param('rfc') rfc: string) {\n    const [recurso] = await this.recursosService.findOne(rfc.toUpperCase());\n    if (!recurso) {\n      throw new HttpException('Recurso no encontrado', HttpStatus.NOT_FOUND);\n    }\n    return recurso;\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { RecursosService } from './recursos.service';\nimport { RecursosController } from './recursos.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Recurso } from '../entities/recurso.entity';\nimport { DelegacionMunicipio } from '../entities/delegacion-municipio.entity';\nimport { Estado } from '../entities/estado.entity';\nimport { Empleado } from '../entities/empleado.entity';\nimport { Rfc } from '../../sat/entities/rfc.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature(\n      [Recurso, DelegacionMunicipio, Estado, Empleado],\n      'eslabon'\n    ),\n  ],\n  controllers: [RecursosController],\n  providers: [RecursosService],\n  exports: [TypeOrmModule],\n})\nexport class RecursosModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Recurso } from '../entities/recurso.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class RecursosService {\n  constructor(\n    @InjectRepository(Recurso, 'eslabon')\n    private readonly recursoRepository: Repository<Recurso>\n  ) {}\n\n  findAllActive() {\n    return this.recursoRepository.find({\n      where: { empleado: { estatus: 1 } },\n      relations: ['municipio', 'estado', 'empleado'],\n    });\n  }\n\n  findOne(rfc: string) {\n    const parsedRfc = `${rfc.substring(0, 4)}-${rfc.substring(\n      4,\n      10\n    )}-${rfc.substring(10, 13)}`;\n    return this.recursoRepository.find({\n      where: { curp: parsedRfc, empleado: { estatus: 1 } },\n      relations: ['municipio', 'estado', 'empleado'],\n    });\n  }\n}\n","import { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class Rfc {\n  @PrimaryColumn()\n  rfc: string;\n  @Column()\n  nombre_razon_social: string;\n  @Column()\n  codigo_postal: number;\n}\n","import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { RfcsService } from './rfcs.service';\n\n@Controller('sat/rfcs')\nexport class RfcsController {\n  constructor(private readonly rfcsService: RfcsService) {}\n\n  @Post('listado')\n  findAll(@Body('rfcs') rfcs: string[]) {\n    return this.rfcsService.findAll(rfcs);\n  }\n\n  @Get(':rfc')\n  findOne(@Param('rfc') rfc: string) {\n    return this.rfcsService.findOne(rfc);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { RfcsService } from './rfcs.service';\nimport { RfcsController } from './rfcs.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Rfc } from '../entities/rfc.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Rfc], 'rfcs')],\n  controllers: [RfcsController],\n  providers: [RfcsService],\n  exports: [TypeOrmModule],\n})\nexport class RfcsModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { In, Repository } from 'typeorm';\nimport { Rfc } from '../entities/rfc.entity';\n\n\n@Injectable()\nexport class RfcsService {\n  constructor(\n    @InjectRepository(Rfc, 'rfcs')\n    private readonly Rfc: Repository<Rfc>\n  ) {}\n\n  findAll(rfcs: string[]) {\n    return this.Rfc\n      .createQueryBuilder('r')\n      .select('r.rfc, r.codigo_postal')\n      .where('r.rfc in (:...sat)', { rfcs })\n      .getRawMany();\n  }\n\n  async findOne(rfc: string) {\n    const results = await this.Rfc.query('EXEC getRfcInfo @0', [rfc]);\n    return results[0] ? results[0] : {};\n  }\n\n\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nestjs/typeorm\");","module.exports = require(\"tslib\");","module.exports = require(\"typeorm\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.enableCors({});\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}